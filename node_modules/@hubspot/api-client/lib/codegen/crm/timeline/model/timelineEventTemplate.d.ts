/**
 * Timeline events
 * This feature allows an app to create and configure custom events that can show up in the timelines of certain CRM objects like contacts, companies, tickets, or deals. You\'ll find multiple use cases for this API in the sections below.
 *
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { TimelineEventTemplateToken } from './timelineEventTemplateToken';
/**
* The current state of the template definition.
*/
export declare class TimelineEventTemplate {
    /**
    * The template name.
    */
    'name': string;
    /**
    * This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline as a header.
    */
    'headerTemplate'?: string;
    /**
    * This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline when you expand the details.
    */
    'detailTemplate'?: string;
    /**
    * A collection of tokens that can be used as custom properties on the event and to create fully fledged CRM objects.
    */
    'tokens': Array<TimelineEventTemplateToken>;
    /**
    * The template ID.
    */
    'id': string;
    /**
    * The type of CRM object this template is for. [Contacts, companies, tickets, and deals] are supported.
    */
    'objectType': string;
    /**
    * The date and time that the Event Template was created, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.
    */
    'createdAt'?: Date;
    /**
    * The date and time that the Event Template was last updated, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.
    */
    'updatedAt'?: Date;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
