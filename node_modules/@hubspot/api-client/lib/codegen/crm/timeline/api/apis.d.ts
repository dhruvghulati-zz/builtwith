/// <reference types="node" />
export * from './eventsApi';
import { EventsApi } from './eventsApi';
export * from './templatesApi';
import { TemplatesApi } from './templatesApi';
export * from './tokensApi';
import { TokensApi } from './tokensApi';
import * as fs from 'fs';
import * as http from 'http';
export declare class HttpError extends Error {
    response: http.IncomingMessage;
    body: any;
    statusCode?: number | undefined;
    constructor(response: http.IncomingMessage, body: any, statusCode?: number | undefined);
}
export interface RequestDetailedFile {
    value: Buffer;
    options?: {
        filename?: string;
        contentType?: string;
    };
}
export declare type RequestFile = string | Buffer | fs.ReadStream | RequestDetailedFile;
export declare const APIS: (typeof EventsApi | typeof TemplatesApi | typeof TokensApi)[];
