/**
 * Associations
 * Associations define the relationships between objects in HubSpot. These endpoints allow you to create, read, and remove associations.
 *
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="node" />
import http = require('http');
import { BatchInputPublicAssociation } from '../model/batchInputPublicAssociation';
import { BatchInputPublicObjectId } from '../model/batchInputPublicObjectId';
import { BatchResponsePublicAssociation } from '../model/batchResponsePublicAssociation';
import { BatchResponsePublicAssociationMulti } from '../model/batchResponsePublicAssociationMulti';
import { Authentication, Interceptor } from '../model/models';
import { ApiKeyAuth, OAuth } from '../model/models';
export declare enum BatchApiApiKeys {
    hapikey = 0
}
export declare class BatchApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
        hapikey: ApiKeyAuth;
        oauth2: OAuth;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: BatchApiApiKeys, value: string): void;
    set accessToken(token: string);
    addInterceptor(interceptor: Interceptor): void;
    /**
     * Remove the associations between all pairs of objects identified in the request body.
     * @summary Archive a batch of associations
     * @param fromObjectType
     * @param toObjectType
     * @param batchInputPublicAssociation
     */
    archive(fromObjectType: string, toObjectType: string, batchInputPublicAssociation?: BatchInputPublicAssociation, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body?: any;
    }>;
    /**
     * Associate all pairs of objects identified in the request body.
     * @summary Create a batch of associations
     * @param fromObjectType
     * @param toObjectType
     * @param batchInputPublicAssociation
     */
    create(fromObjectType: string, toObjectType: string, batchInputPublicAssociation?: BatchInputPublicAssociation, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: BatchResponsePublicAssociation;
    }>;
    /**
     * Get the IDs of all `{toObjectType}` objects associated with those specified in the request body.
     * @summary Read a batch of associations
     * @param fromObjectType
     * @param toObjectType
     * @param batchInputPublicObjectId
     */
    read(fromObjectType: string, toObjectType: string, batchInputPublicObjectId?: BatchInputPublicObjectId, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: BatchResponsePublicAssociationMulti;
    }>;
}
