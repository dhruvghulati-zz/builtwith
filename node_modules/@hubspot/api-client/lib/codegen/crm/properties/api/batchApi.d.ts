/**
 * Properties
 * All HubSpot objects store data in default and custom properties. These endpoints provide access to read and modify object properties in HubSpot.
 *
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="node" />
import http = require('http');
import { BatchInputPropertyCreate } from '../model/batchInputPropertyCreate';
import { BatchInputPropertyName } from '../model/batchInputPropertyName';
import { BatchReadInputPropertyName } from '../model/batchReadInputPropertyName';
import { BatchResponseProperty } from '../model/batchResponseProperty';
import { Authentication, Interceptor } from '../model/models';
import { ApiKeyAuth, OAuth } from '../model/models';
export declare enum BatchApiApiKeys {
    hapikey = 0
}
export declare class BatchApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
        hapikey: ApiKeyAuth;
        oauth2: OAuth;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: BatchApiApiKeys, value: string): void;
    set accessToken(token: string);
    addInterceptor(interceptor: Interceptor): void;
    /**
     * Archive a provided list of properties. This method will return a 204 No Content response on success regardless of the initial state of the property (e.g. active, already archived, non-existent).
     * @summary Archive a batch of properties
     * @param objectType
     * @param batchInputPropertyName
     */
    archive(objectType: string, batchInputPropertyName: BatchInputPropertyName, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body?: any;
    }>;
    /**
     * Create a batch of properties using the same rules as when creating an individual property.
     * @summary Create a batch of properties
     * @param objectType
     * @param batchInputPropertyCreate
     */
    create(objectType: string, batchInputPropertyCreate: BatchInputPropertyCreate, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: BatchResponseProperty;
    }>;
    /**
     * Read a provided list of properties.
     * @summary Read a batch of properties
     * @param objectType
     * @param batchReadInputPropertyName
     */
    read(objectType: string, batchReadInputPropertyName: BatchReadInputPropertyName, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: BatchResponseProperty;
    }>;
}
