/**
 * Properties
 * All HubSpot objects store data in default and custom properties. These endpoints provide access to read and modify object properties in HubSpot.
 *
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="node" />
import http = require('http');
import { CollectionResponsePropertyGroup } from '../model/collectionResponsePropertyGroup';
import { PropertyGroup } from '../model/propertyGroup';
import { PropertyGroupCreate } from '../model/propertyGroupCreate';
import { PropertyGroupUpdate } from '../model/propertyGroupUpdate';
import { Authentication, Interceptor } from '../model/models';
import { ApiKeyAuth, OAuth } from '../model/models';
export declare enum GroupsApiApiKeys {
    hapikey = 0
}
export declare class GroupsApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
        hapikey: ApiKeyAuth;
        oauth2: OAuth;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: GroupsApiApiKeys, value: string): void;
    set accessToken(token: string);
    addInterceptor(interceptor: Interceptor): void;
    /**
     * Move a property group identified by {groupName} to the recycling bin.
     * @summary Archive a property group
     * @param objectType
     * @param groupName
     */
    archive(objectType: string, groupName: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body?: any;
    }>;
    /**
     * Create and return a copy of a new property group.
     * @summary Create a property group
     * @param objectType
     * @param propertyGroupCreate
     */
    create(objectType: string, propertyGroupCreate: PropertyGroupCreate, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: PropertyGroup;
    }>;
    /**
     * Read all existing property groups for the specified object type and HubSpot account.
     * @summary Read all property groups
     * @param objectType
     */
    getAll(objectType: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: CollectionResponsePropertyGroup;
    }>;
    /**
     * Read a property group identified by {groupName}.
     * @summary Read a property group
     * @param objectType
     * @param groupName
     */
    getByName(objectType: string, groupName: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: PropertyGroup;
    }>;
    /**
     * Perform a partial update of a property group identified by {groupName}. Provided fields will be overwritten.
     * @summary Update a property group
     * @param objectType
     * @param groupName
     * @param propertyGroupUpdate
     */
    update(objectType: string, groupName: string, propertyGroupUpdate: PropertyGroupUpdate, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: PropertyGroup;
    }>;
}
