/**
 * Custom Workflow Actions
 * Create custom workflow actions
 *
 * The version of the OpenAPI document: v4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="node" />
import http = require('http');
import { ActionRevision } from '../model/actionRevision';
import { CollectionResponseActionRevisionForwardPaging } from '../model/collectionResponseActionRevisionForwardPaging';
import { Authentication, Interceptor } from '../model/models';
import { ApiKeyAuth } from '../model/models';
export declare enum RevisionsApiApiKeys {
    developer_hapikey = 0
}
export declare class RevisionsApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
        developer_hapikey: ApiKeyAuth;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: RevisionsApiApiKeys, value: string): void;
    addInterceptor(interceptor: Interceptor): void;
    /**
     * Returns the given version of a custom workflow action.
     * @summary Get a revision for a custom action
     * @param definitionId The ID of the custom workflow action.
     * @param revisionId The version of the custom workflow action.
     * @param appId
     */
    getById(definitionId: string, revisionId: string, appId: number, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ActionRevision;
    }>;
    /**
     * Returns a list of revisions for a custom workflow action.
     * @summary Get all revisions for a custom action
     * @param definitionId The ID of the custom workflow action
     * @param appId
     * @param limit Maximum number of results per page.
     * @param after The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results.
     */
    getPage(definitionId: string, appId: number, limit?: number, after?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: CollectionResponseActionRevisionForwardPaging;
    }>;
}
