/**
 * Webhooks API
 * Provides a way for apps to subscribe to certain change events in HubSpot. Once configured, apps will receive event payloads containing details about the changes at a specified target URL. There can only be one target URL for receiving event notifications per app.
 *
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="node" />
import http = require('http');
import { SettingsChangeRequest } from '../model/settingsChangeRequest';
import { SettingsResponse } from '../model/settingsResponse';
import { Authentication, Interceptor } from '../model/models';
import { ApiKeyAuth } from '../model/models';
export declare enum SettingsApiApiKeys {
    hapikey = 0
}
export declare class SettingsApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
        hapikey: ApiKeyAuth;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: SettingsApiApiKeys, value: string): void;
    addInterceptor(interceptor: Interceptor): void;
    /**
     * Resets webhook target URL to empty, and max concurrency limit to `0` for the given app. This will effectively pause all webhook subscriptions until new settings are provided.
     * @summary Clear webhook settings
     * @param appId The ID of the target app.
     */
    clear(appId: number, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body?: any;
    }>;
    /**
     * Used to set the webhook target URL and max concurrency limit for the given app.
     * @summary Configure webhook settings
     * @param appId The ID of the target app.
     * @param settingsChangeRequest Settings state to create new with or replace existing settings with.
     */
    configure(appId: number, settingsChangeRequest: SettingsChangeRequest, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: SettingsResponse;
    }>;
    /**
     * Returns the current state of webhook settings for the given app. These settings include the app\'s configured target URL and max concurrency limit.
     * @summary Get webhook settings
     * @param appId The ID of the target app.
     */
    getAll(appId: number, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: SettingsResponse;
    }>;
}
