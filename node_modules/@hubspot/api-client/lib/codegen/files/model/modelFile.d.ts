/**
 * Files
 * Upload and manage files.
 *
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
* File
*/
export declare class ModelFile {
    /**
    * File ID.
    */
    'id': string;
    /**
    * Creation time of the file object.
    */
    'createdAt': Date;
    /**
    * Deletion time of the file object.
    */
    'archivedAt'?: Date;
    /**
    * Timestamp of the latest update to the file.
    */
    'updatedAt': Date;
    /**
    * If the file is deleted.
    */
    'archived': boolean;
    /**
    * Id of the folder the file is in.
    */
    'parentFolderId'?: string;
    /**
    * Name of the file.
    */
    'name'?: string;
    /**
    * Path of the file in the file manager.
    */
    'path'?: string;
    /**
    * Size in bytes of the file.
    */
    'size'?: number;
    /**
    * For image and video files, the height of the content.
    */
    'height'?: number;
    /**
    * For image and video files, the width of the content.
    */
    'width'?: number;
    /**
    * Encoding of the file.
    */
    'encoding'?: string;
    /**
    * Type of the file. Can be IMG, DOCUMENT, AUDIO, MOVIE, or OTHER.
    */
    'type'?: string;
    /**
    * Extension of the file. For example png.
    */
    'extension'?: string;
    /**
    * Default hosting URL of the file. This will use one of HubSpot\'s provided URLs to serve the file.
    */
    'defaultHostingUrl'?: string;
    /**
    * URL of the given file. This URL can change depending on the domain settings of the account. Will use the select file hosting domain.
    */
    'url'?: string;
    /**
    * Previously \"archied\". Indicates if the file should be used when creating new content like web pages.
    */
    'isUsableInContent'?: boolean;
    /**
    * File access. Can be PUBLIC_INDEXABLE, PUBLIC_NOT_INDEXABLE, PRIVATE.
    */
    'access': ModelFile.AccessEnum;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace ModelFile {
    enum AccessEnum {
        PUBLICINDEXABLE,
        PUBLICNOTINDEXABLE,
        HIDDENINDEXABLE,
        HIDDENNOTINDEXABLE,
        HIDDENPRIVATE,
        PRIVATE
    }
}
