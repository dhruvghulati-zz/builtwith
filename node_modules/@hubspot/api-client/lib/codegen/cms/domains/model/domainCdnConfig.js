"use strict";
/**
 * Domains
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DomainCdnConfig = void 0;
class DomainCdnConfig {
    static getAttributeTypeMap() {
        return DomainCdnConfig.attributeTypeMap;
    }
}
exports.DomainCdnConfig = DomainCdnConfig;
DomainCdnConfig.discriminator = undefined;
DomainCdnConfig.attributeTypeMap = [
    {
        "name": "portalId",
        "baseName": "portalId",
        "type": "number"
    },
    {
        "name": "created",
        "baseName": "created",
        "type": "number"
    },
    {
        "name": "updated",
        "baseName": "updated",
        "type": "number"
    },
    {
        "name": "domainId",
        "baseName": "domainId",
        "type": "number"
    },
    {
        "name": "certId",
        "baseName": "certId",
        "type": "number"
    },
    {
        "name": "certExpirationDate",
        "baseName": "certExpirationDate",
        "type": "number"
    },
    {
        "name": "cdnId",
        "baseName": "cdnId",
        "type": "string"
    },
    {
        "name": "cdnGroupId",
        "baseName": "cdnGroupId",
        "type": "string"
    },
    {
        "name": "sslStatus",
        "baseName": "sslStatus",
        "type": "DomainCdnConfig.SslStatusEnum"
    },
    {
        "name": "validationMethod",
        "baseName": "validationMethod",
        "type": "DomainCdnConfig.ValidationMethodEnum"
    },
    {
        "name": "httpBody",
        "baseName": "httpBody",
        "type": "string"
    },
    {
        "name": "httpUrlPath",
        "baseName": "httpUrlPath",
        "type": "string"
    },
    {
        "name": "cname",
        "baseName": "cname",
        "type": "string"
    },
    {
        "name": "cnameTarget",
        "baseName": "cnameTarget",
        "type": "string"
    },
    {
        "name": "minimumTlsVersion",
        "baseName": "minimumTlsVersion",
        "type": "DomainCdnConfig.MinimumTlsVersionEnum"
    },
    {
        "name": "alternateOriginHostname",
        "baseName": "alternateOriginHostname",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    }
];
(function (DomainCdnConfig) {
    let SslStatusEnum;
    (function (SslStatusEnum) {
        SslStatusEnum[SslStatusEnum["_0"] = '0'] = "_0";
        SslStatusEnum[SslStatusEnum["_1"] = '1'] = "_1";
        SslStatusEnum[SslStatusEnum["_2"] = '2'] = "_2";
        SslStatusEnum[SslStatusEnum["_3"] = '3'] = "_3";
        SslStatusEnum[SslStatusEnum["_4"] = '4'] = "_4";
        SslStatusEnum[SslStatusEnum["_5"] = '5'] = "_5";
        SslStatusEnum[SslStatusEnum["_6"] = '6'] = "_6";
        SslStatusEnum[SslStatusEnum["_7"] = '7'] = "_7";
        SslStatusEnum[SslStatusEnum["_8"] = '8'] = "_8";
        SslStatusEnum[SslStatusEnum["_9"] = '9'] = "_9";
        SslStatusEnum[SslStatusEnum["_10"] = '10'] = "_10";
        SslStatusEnum[SslStatusEnum["_11"] = '11'] = "_11";
    })(SslStatusEnum = DomainCdnConfig.SslStatusEnum || (DomainCdnConfig.SslStatusEnum = {}));
    let ValidationMethodEnum;
    (function (ValidationMethodEnum) {
        ValidationMethodEnum[ValidationMethodEnum["_0"] = '0'] = "_0";
        ValidationMethodEnum[ValidationMethodEnum["_1"] = '1'] = "_1";
        ValidationMethodEnum[ValidationMethodEnum["_2"] = '2'] = "_2";
    })(ValidationMethodEnum = DomainCdnConfig.ValidationMethodEnum || (DomainCdnConfig.ValidationMethodEnum = {}));
    let MinimumTlsVersionEnum;
    (function (MinimumTlsVersionEnum) {
        MinimumTlsVersionEnum[MinimumTlsVersionEnum["_10"] = '1.0'] = "_10";
        MinimumTlsVersionEnum[MinimumTlsVersionEnum["_11"] = '1.1'] = "_11";
        MinimumTlsVersionEnum[MinimumTlsVersionEnum["_12"] = '1.2'] = "_12";
        MinimumTlsVersionEnum[MinimumTlsVersionEnum["_13"] = '1.3'] = "_13";
        MinimumTlsVersionEnum[MinimumTlsVersionEnum["None"] = 'none'] = "None";
        MinimumTlsVersionEnum[MinimumTlsVersionEnum["Null"] = 'null'] = "Null";
    })(MinimumTlsVersionEnum = DomainCdnConfig.MinimumTlsVersionEnum || (DomainCdnConfig.MinimumTlsVersionEnum = {}));
})(DomainCdnConfig = exports.DomainCdnConfig || (exports.DomainCdnConfig = {}));
