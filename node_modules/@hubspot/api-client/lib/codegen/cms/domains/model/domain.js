"use strict";
/**
 * Domains
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Domain = void 0;
class Domain {
    static getAttributeTypeMap() {
        return Domain.attributeTypeMap;
    }
}
exports.Domain = Domain;
Domain.discriminator = undefined;
Domain.attributeTypeMap = [
    {
        "name": "portalId",
        "baseName": "portalId",
        "type": "number"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "number"
    },
    {
        "name": "created",
        "baseName": "created",
        "type": "number"
    },
    {
        "name": "updated",
        "baseName": "updated",
        "type": "number"
    },
    {
        "name": "domain",
        "baseName": "domain",
        "type": "string"
    },
    {
        "name": "primaryLandingPage",
        "baseName": "primaryLandingPage",
        "type": "boolean"
    },
    {
        "name": "primaryEmail",
        "baseName": "primaryEmail",
        "type": "boolean"
    },
    {
        "name": "primaryBlog",
        "baseName": "primaryBlog",
        "type": "boolean"
    },
    {
        "name": "primaryBlogPost",
        "baseName": "primaryBlogPost",
        "type": "boolean"
    },
    {
        "name": "primarySitePage",
        "baseName": "primarySitePage",
        "type": "boolean"
    },
    {
        "name": "primaryKnowledge",
        "baseName": "primaryKnowledge",
        "type": "boolean"
    },
    {
        "name": "primaryLegacyPage",
        "baseName": "primaryLegacyPage",
        "type": "boolean"
    },
    {
        "name": "primaryClickTracking",
        "baseName": "primaryClickTracking",
        "type": "boolean"
    },
    {
        "name": "fullCategoryKey",
        "baseName": "fullCategoryKey",
        "type": "string"
    },
    {
        "name": "secondaryToDomain",
        "baseName": "secondaryToDomain",
        "type": "string"
    },
    {
        "name": "isResolving",
        "baseName": "isResolving",
        "type": "boolean"
    },
    {
        "name": "isDnsCorrect",
        "baseName": "isDnsCorrect",
        "type": "boolean"
    },
    {
        "name": "manuallyMarkedAsResolving",
        "baseName": "manuallyMarkedAsResolving",
        "type": "boolean"
    },
    {
        "name": "consecutiveNonResolvingCount",
        "baseName": "consecutiveNonResolvingCount",
        "type": "number"
    },
    {
        "name": "sslCname",
        "baseName": "sslCname",
        "type": "string"
    },
    {
        "name": "isSslEnabled",
        "baseName": "isSslEnabled",
        "type": "boolean"
    },
    {
        "name": "isSslOnly",
        "baseName": "isSslOnly",
        "type": "boolean"
    },
    {
        "name": "certificateId",
        "baseName": "certificateId",
        "type": "number"
    },
    {
        "name": "sslRequestId",
        "baseName": "sslRequestId",
        "type": "number"
    },
    {
        "name": "isUsedForBlogPost",
        "baseName": "isUsedForBlogPost",
        "type": "boolean"
    },
    {
        "name": "isUsedForSitePage",
        "baseName": "isUsedForSitePage",
        "type": "boolean"
    },
    {
        "name": "isUsedForLandingPage",
        "baseName": "isUsedForLandingPage",
        "type": "boolean"
    },
    {
        "name": "isUsedForEmail",
        "baseName": "isUsedForEmail",
        "type": "boolean"
    },
    {
        "name": "isUsedForKnowledge",
        "baseName": "isUsedForKnowledge",
        "type": "boolean"
    },
    {
        "name": "setupTaskId",
        "baseName": "setupTaskId",
        "type": "number"
    },
    {
        "name": "isSetupComplete",
        "baseName": "isSetupComplete",
        "type": "boolean"
    },
    {
        "name": "setUpLanguage",
        "baseName": "setUpLanguage",
        "type": "string"
    },
    {
        "name": "teamIds",
        "baseName": "teamIds",
        "type": "Array<number>"
    },
    {
        "name": "actualCname",
        "baseName": "actualCname",
        "type": "string"
    },
    {
        "name": "correctCname",
        "baseName": "correctCname",
        "type": "string"
    },
    {
        "name": "actualIp",
        "baseName": "actualIp",
        "type": "string"
    },
    {
        "name": "apexResolutionStatus",
        "baseName": "apexResolutionStatus",
        "type": "Domain.ApexResolutionStatusEnum"
    },
    {
        "name": "apexDomain",
        "baseName": "apexDomain",
        "type": "string"
    },
    {
        "name": "publicSuffix",
        "baseName": "publicSuffix",
        "type": "string"
    },
    {
        "name": "apexIpAddresses",
        "baseName": "apexIpAddresses",
        "type": "Array<string>"
    },
    {
        "name": "siteId",
        "baseName": "siteId",
        "type": "number"
    },
    {
        "name": "brandId",
        "baseName": "brandId",
        "type": "number"
    },
    {
        "name": "deletable",
        "baseName": "deletable",
        "type": "boolean"
    },
    {
        "name": "domainCdnConfig",
        "baseName": "domainCdnConfig",
        "type": "DomainCdnConfig"
    },
    {
        "name": "setupInfo",
        "baseName": "setupInfo",
        "type": "DomainSetupInfo"
    },
    {
        "name": "derivedBrandName",
        "baseName": "derivedBrandName",
        "type": "string"
    },
    {
        "name": "createdById",
        "baseName": "createdById",
        "type": "number"
    },
    {
        "name": "updatedById",
        "baseName": "updatedById",
        "type": "number"
    },
    {
        "name": "label",
        "baseName": "label",
        "type": "string"
    },
    {
        "name": "isAnyPrimary",
        "baseName": "isAnyPrimary",
        "type": "boolean"
    },
    {
        "name": "isLegacyDomain",
        "baseName": "isLegacyDomain",
        "type": "boolean"
    },
    {
        "name": "isInternalDomain",
        "baseName": "isInternalDomain",
        "type": "boolean"
    },
    {
        "name": "isResolvingInternalProperty",
        "baseName": "isResolvingInternalProperty",
        "type": "boolean"
    },
    {
        "name": "isResolvingIgnoringManuallyMarkedAsResolving",
        "baseName": "isResolvingIgnoringManuallyMarkedAsResolving",
        "type": "boolean"
    },
    {
        "name": "isUsedForAnyContentType",
        "baseName": "isUsedForAnyContentType",
        "type": "boolean"
    },
    {
        "name": "isLegacy",
        "baseName": "isLegacy",
        "type": "boolean"
    },
    {
        "name": "authorAt",
        "baseName": "authorAt",
        "type": "number"
    },
    {
        "name": "cosObjectType",
        "baseName": "cosObjectType",
        "type": "Domain.CosObjectTypeEnum"
    },
    {
        "name": "cdnPurgeEmbargoTime",
        "baseName": "cdnPurgeEmbargoTime",
        "type": "number"
    },
    {
        "name": "isStagingDomain",
        "baseName": "isStagingDomain",
        "type": "boolean"
    }
];
(function (Domain) {
    let ApexResolutionStatusEnum;
    (function (ApexResolutionStatusEnum) {
        ApexResolutionStatusEnum[ApexResolutionStatusEnum["INELIGIBLE"] = 'INELIGIBLE'] = "INELIGIBLE";
        ApexResolutionStatusEnum[ApexResolutionStatusEnum["SUGGESTRESOLVING"] = 'SUGGEST_RESOLVING'] = "SUGGESTRESOLVING";
        ApexResolutionStatusEnum[ApexResolutionStatusEnum["ALREADYRESOLVING"] = 'ALREADY_RESOLVING'] = "ALREADYRESOLVING";
        ApexResolutionStatusEnum[ApexResolutionStatusEnum["ERROR"] = 'ERROR'] = "ERROR";
    })(ApexResolutionStatusEnum = Domain.ApexResolutionStatusEnum || (Domain.ApexResolutionStatusEnum = {}));
    let CosObjectTypeEnum;
    (function (CosObjectTypeEnum) {
        CosObjectTypeEnum[CosObjectTypeEnum["CONTENT"] = 'CONTENT'] = "CONTENT";
        CosObjectTypeEnum[CosObjectTypeEnum["EXTENSIONRESOURCE"] = 'EXTENSION_RESOURCE'] = "EXTENSIONRESOURCE";
        CosObjectTypeEnum[CosObjectTypeEnum["LAYOUT"] = 'LAYOUT'] = "LAYOUT";
        CosObjectTypeEnum[CosObjectTypeEnum["CUSTOMWIDGET"] = 'CUSTOM_WIDGET'] = "CUSTOMWIDGET";
        CosObjectTypeEnum[CosObjectTypeEnum["WIDGET"] = 'WIDGET'] = "WIDGET";
        CosObjectTypeEnum[CosObjectTypeEnum["FORM"] = 'FORM'] = "FORM";
        CosObjectTypeEnum[CosObjectTypeEnum["PLACEMENT"] = 'PLACEMENT'] = "PLACEMENT";
        CosObjectTypeEnum[CosObjectTypeEnum["IMAGE"] = 'IMAGE'] = "IMAGE";
        CosObjectTypeEnum[CosObjectTypeEnum["DOMAINSETTINGS"] = 'DOMAIN_SETTINGS'] = "DOMAINSETTINGS";
        CosObjectTypeEnum[CosObjectTypeEnum["SITESETTINGS"] = 'SITE_SETTINGS'] = "SITESETTINGS";
        CosObjectTypeEnum[CosObjectTypeEnum["EMAILADDRESS"] = 'EMAIL_ADDRESS'] = "EMAILADDRESS";
        CosObjectTypeEnum[CosObjectTypeEnum["WORKFLOW"] = 'WORKFLOW'] = "WORKFLOW";
        CosObjectTypeEnum[CosObjectTypeEnum["HUBDBTABLE"] = 'HUBDB_TABLE'] = "HUBDBTABLE";
        CosObjectTypeEnum[CosObjectTypeEnum["REDIRECTURL"] = 'REDIRECT_URL'] = "REDIRECTURL";
        CosObjectTypeEnum[CosObjectTypeEnum["DESIGNFOLDER"] = 'DESIGN_FOLDER'] = "DESIGNFOLDER";
        CosObjectTypeEnum[CosObjectTypeEnum["SITEMAP"] = 'SITE_MAP'] = "SITEMAP";
        CosObjectTypeEnum[CosObjectTypeEnum["DOMAIN"] = 'DOMAIN'] = "DOMAIN";
        CosObjectTypeEnum[CosObjectTypeEnum["BLOG"] = 'BLOG'] = "BLOG";
        CosObjectTypeEnum[CosObjectTypeEnum["FILE"] = 'FILE'] = "FILE";
        CosObjectTypeEnum[CosObjectTypeEnum["FOLDER"] = 'FOLDER'] = "FOLDER";
        CosObjectTypeEnum[CosObjectTypeEnum["SITEMENU"] = 'SITE_MENU'] = "SITEMENU";
        CosObjectTypeEnum[CosObjectTypeEnum["THEME"] = 'THEME'] = "THEME";
        CosObjectTypeEnum[CosObjectTypeEnum["CONTENTGROUP"] = 'CONTENT_GROUP'] = "CONTENTGROUP";
        CosObjectTypeEnum[CosObjectTypeEnum["FOLLOWME"] = 'FOLLOW_ME'] = "FOLLOWME";
        CosObjectTypeEnum[CosObjectTypeEnum["KNOWLEDGEBASE"] = 'KNOWLEDGE_BASE'] = "KNOWLEDGEBASE";
        CosObjectTypeEnum[CosObjectTypeEnum["LISTMEMBERSHIP"] = 'LIST_MEMBERSHIP'] = "LISTMEMBERSHIP";
        CosObjectTypeEnum[CosObjectTypeEnum["CONTACTMEMBERSHIP"] = 'CONTACT_MEMBERSHIP'] = "CONTACTMEMBERSHIP";
        CosObjectTypeEnum[CosObjectTypeEnum["PASSWORDPROTECTED"] = 'PASSWORD_PROTECTED'] = "PASSWORDPROTECTED";
        CosObjectTypeEnum[CosObjectTypeEnum["UNRESTRICTEDACCESS"] = 'UNRESTRICTED_ACCESS'] = "UNRESTRICTEDACCESS";
        CosObjectTypeEnum[CosObjectTypeEnum["MARKETPLACELISTING"] = 'MARKETPLACE_LISTING'] = "MARKETPLACELISTING";
        CosObjectTypeEnum[CosObjectTypeEnum["LAYOUTSECTION"] = 'LAYOUT_SECTION'] = "LAYOUTSECTION";
        CosObjectTypeEnum[CosObjectTypeEnum["THEMESETTINGS"] = 'THEME_SETTINGS'] = "THEMESETTINGS";
        CosObjectTypeEnum[CosObjectTypeEnum["VIDEOPLAYER"] = 'VIDEO_PLAYER'] = "VIDEOPLAYER";
        CosObjectTypeEnum[CosObjectTypeEnum["URLMAPPING"] = 'URL_MAPPING'] = "URLMAPPING";
        CosObjectTypeEnum[CosObjectTypeEnum["KNOWLEDGECATEGORY"] = 'KNOWLEDGE_CATEGORY'] = "KNOWLEDGECATEGORY";
        CosObjectTypeEnum[CosObjectTypeEnum["KNOWLEDGEHOMEPAGECATEGORY"] = 'KNOWLEDGE_HOMEPAGE_CATEGORY'] = "KNOWLEDGEHOMEPAGECATEGORY";
        CosObjectTypeEnum[CosObjectTypeEnum["RAWASSET"] = 'RAW_ASSET'] = "RAWASSET";
        CosObjectTypeEnum[CosObjectTypeEnum["GLOBALCONTENT"] = 'GLOBAL_CONTENT'] = "GLOBALCONTENT";
        CosObjectTypeEnum[CosObjectTypeEnum["HUBDBTABLEROW"] = 'HUBDB_TABLE_ROW'] = "HUBDBTABLEROW";
        CosObjectTypeEnum[CosObjectTypeEnum["BLOGAUTHOR"] = 'BLOG_AUTHOR'] = "BLOGAUTHOR";
        CosObjectTypeEnum[CosObjectTypeEnum["SERVERLESSFUNCTION"] = 'SERVERLESS_FUNCTION'] = "SERVERLESSFUNCTION";
        CosObjectTypeEnum[CosObjectTypeEnum["KNOWLEDGECATEGORYTRANSLATION"] = 'KNOWLEDGE_CATEGORY_TRANSLATION'] = "KNOWLEDGECATEGORYTRANSLATION";
    })(CosObjectTypeEnum = Domain.CosObjectTypeEnum || (Domain.CosObjectTypeEnum = {}));
})(Domain = exports.Domain || (exports.Domain = {}));
