/// <reference types="node" />
export * from './rowsApi';
import { RowsApi } from './rowsApi';
export * from './rowsBatchApi';
import { RowsBatchApi } from './rowsBatchApi';
export * from './tablesApi';
import { TablesApi } from './tablesApi';
import * as fs from 'fs';
import * as http from 'http';
export declare class HttpError extends Error {
    response: http.IncomingMessage;
    body: any;
    statusCode?: number | undefined;
    constructor(response: http.IncomingMessage, body: any, statusCode?: number | undefined);
}
export interface RequestDetailedFile {
    value: Buffer;
    options?: {
        filename?: string;
        contentType?: string;
    };
}
export declare type RequestFile = string | Buffer | fs.ReadStream | RequestDetailedFile;
export declare const APIS: (typeof RowsApi | typeof RowsBatchApi | typeof TablesApi)[];
